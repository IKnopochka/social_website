{"version":3,"file":"static/js/867.b41727ee.chunk.js","mappings":"oKACA,G,QAAA,CAAgB,QAAU,yBAAyB,KAAO,sBAAsB,OAAS,wBAAwB,SAAW,0BAA0B,SAAW,4B,mBCIpJA,EAAa,SAACC,GACvB,OAAOC,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAQC,KAAKC,UAChCC,EAAAA,EAAAA,MAACC,EAAAA,GAAO,CAACC,GAAI,aAAeR,EAAMS,GAAIP,UAAW,SAAAQ,GAAU,OAAAA,EAARC,SAAyBR,EAAQS,OAAST,EAAQC,IAAI,EAACC,SAAA,EACtGJ,EAAAA,EAAAA,KAAA,OAAKY,IAAKb,EAAMa,MACfb,EAAMI,SAGnB,ECRaU,EAAc,SAACd,GAExB,OAAOC,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAQY,IAAIV,SAAEL,EAAMgB,SAC/C,E,uCCkBA,GAAeC,EAAAA,EAAAA,GAAgC,CAACC,KAAM,UAAtD,EAhBoB,SAAClB,GACjB,IAAOmB,EAAgBnB,EAAhBmB,aACP,OACIb,EAAAA,EAAAA,MAAA,QAAMc,SAAUD,EAAad,SAAA,EACzBJ,EAAAA,EAAAA,KAACoB,EAAAA,EAAK,CACFjB,KAAM,UACNkB,UAAWC,EAAAA,EACXC,YAAa,qBACbC,SAAU,CAACC,EAAAA,OAEfzB,EAAAA,EAAAA,KAAA,UAAAI,SAAQ,kBAIpB,ICOA,EAtBgB,SAACL,GAEb,IAAI2B,EAAkB3B,EAAM4B,QAAQC,KAAI,SAAAC,GAAC,OAAK7B,EAAAA,EAAAA,KAACF,EAAU,CAACU,GAAIqB,EAAErB,GAAIL,KAAM0B,EAAE1B,KAAMS,IAAKiB,EAAEjB,KAAM,IAC3FkB,EAAmB/B,EAAMgC,SAASH,KAAI,SAAAI,GAAC,OAAKhC,EAAAA,EAAAA,KAACa,EAAW,CAACL,GAAIwB,EAAExB,GAAIO,QAASiB,EAAEjB,SAAU,IAM5F,OACIV,EAAAA,EAAAA,MAAA,OAAKJ,UAAWC,EAAQyB,QAAQvB,SAAA,EAC5BJ,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAQ+B,QAAQ7B,SAC3BsB,KAELrB,EAAAA,EAAAA,MAAA,OAAKJ,UAAWC,EAAQ6B,SAAS3B,SAAA,CAC5B0B,GACD9B,EAAAA,EAAAA,KAACkC,EAAW,CAACf,SAXV,SAACgB,GACZpC,EAAMqC,aAAaD,EAAKpB,QAC5B,SAaJ,E,8BCPA,GAAesB,EAAAA,EAAAA,KACXC,EAAAA,EAAAA,KAbkB,SAACC,GACnB,MAAO,CACHZ,QAASY,EAAMC,YAAYb,QAC3BI,SAAUQ,EAAMC,YAAYT,SAEpC,IACyB,SAACU,GACtB,MAAO,CACHL,aAAc,SAACrB,GAAqB0B,GAASC,EAAAA,EAAAA,IAAwB3B,GAAS,EAEtF,IAII4B,EAAAA,EAFJ,CAGEC,E","sources":["webpack://project1/./src/s2-features/f2-messages/Dialogs.module.css?f08c","s2-features/f2-messages/DialogItem/DialogItem.tsx","s2-features/f2-messages/MessageItem/MessageItem.tsx","s2-features/f2-messages/MessageForm/MessageForm.tsx","s2-features/f2-messages/Dialogs.tsx","s2-features/f2-messages/DialogsContainer.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialogs_dialogs__ajYBP\",\"name\":\"Dialogs_name__Jn38S\",\"active\":\"Dialogs_active__MWpFM\",\"messages\":\"Dialogs_messages__22jpu\",\"textArea\":\"Dialogs_textArea__TuQaH\"};","import React from \"react\";\nimport classes from \"s2-features/f2-messages/Dialogs.module.css\";\nimport {NavLink} from \"react-router-dom\";\nimport {DialogItemProps} from \"s1-main/m3-dal/types\";\n\nexport const DialogItem = (props: DialogItemProps) => {\n    return <div className={classes.name}>\n        <NavLink to={\"dialogs/*/\" + props.id} className={({isActive}) => isActive ? classes.active : classes.name}>\n            <img src={props.src}/>\n            {props.name}\n        </NavLink>\n    </div>\n}","import React from \"react\";\nimport classes from \"s2-features/f2-messages/Dialogs.module.css\";\nimport {MessageItemProps} from \"s1-main/m3-dal/types\";\n\nexport const MessageItem = (props: MessageItemProps) => {\n\n    return <div className={classes.msg}>{props.message}</div>\n}","import React from 'react';\nimport  {Field, InjectedFormProps, reduxForm} from \"redux-form\";\nimport {textareaField} from \"s1-main/m1-ui/utils/RenderValidationField\";\nimport {maxLength200} from \"s1-main/m1-ui/utils/validators\";\n\nexport type MessageFormPropsType = {\n    message: string\n}\n\nconst MessageForm = (props: InjectedFormProps<MessageFormPropsType>) => {\n    const {handleSubmit} = props\n    return (\n        <form onSubmit={handleSubmit}>\n            <Field\n                name={'message'}\n                component={textareaField}\n                placeholder={'Enter your message'}\n                validate={[maxLength200]}\n            />\n            <button>Add Message</button>\n        </form>\n\n    );\n};\n\nexport default reduxForm<MessageFormPropsType>({form: 'dialog'})(MessageForm);","import React from \"react\";\nimport classes from \"s2-features/f2-messages/Dialogs.module.css\";\nimport {DialogItem} from \"s2-features/f2-messages/DialogItem/DialogItem\";\nimport {MessageItem} from \"s2-features/f2-messages/MessageItem/MessageItem\";\nimport {DialogsPagePropsType} from \"s1-main/m3-dal/types\";\nimport MessageForm, {MessageFormPropsType} from \"s2-features/f2-messages/MessageForm/MessageForm\";\n\n\nconst Dialogs = (props: DialogsPagePropsType) => {\n\n    let dialogsElements = props.dialogs.map(d => (<DialogItem id={d.id} name={d.name} src={d.src}/>))\n    let messagesElements = props.messages.map(m => (<MessageItem id={m.id} message={m.message}/>))\n\n    const Submit = (data: MessageFormPropsType) => {\n        props.onAddMessage(data.message)\n    }\n\n    return (\n        <div className={classes.dialogs}>\n            <div className={classes.friends}>\n                {dialogsElements}\n            </div>\n            <div className={classes.messages}>\n                {messagesElements}\n                <MessageForm onSubmit={Submit}/>\n            </div>\n        </div>\n    )\n}\n\nexport default Dialogs","import React, {ComponentType} from \"react\";\nimport {AddMessageActionCreator} from \"s1-main/m2-bll/dialogsPageReducer\";\nimport Dialogs from \"s2-features/f2-messages/Dialogs\";\nimport {AppRootStateType} from \"s1-main/m3-dal/store\";\nimport {DialogsMapToDispatchPropsType, DialogsPropsType} from \"s1-main/m3-dal/types\";\nimport {compose, Dispatch} from \"redux\";\nimport {withAuthRedirect} from \"s1-main/m1-ui/HOCs/withAuthRedirect\";\nimport {connect} from \"react-redux\";\n\nlet mapStateToProps = (state: AppRootStateType): DialogsPropsType => {\n    return {\n        dialogs: state.dialogsPage.dialogs,\n        messages: state.dialogsPage.messages,\n    }\n}\nlet mapDispatchToProps = (dispatch: Dispatch): DialogsMapToDispatchPropsType => {\n    return {\n        onAddMessage: (message: string) => {dispatch(AddMessageActionCreator(message))}\n    }\n}\n\nexport default compose<ComponentType>(\n    connect(mapStateToProps, mapDispatchToProps),\n    withAuthRedirect,\n)(Dialogs)"],"names":["DialogItem","props","_jsx","className","classes","name","children","_jsxs","NavLink","to","id","_ref","isActive","active","src","MessageItem","msg","message","reduxForm","form","handleSubmit","onSubmit","Field","component","textareaField","placeholder","validate","maxLength200","dialogsElements","dialogs","map","d","messagesElements","messages","m","friends","MessageForm","data","onAddMessage","compose","connect","state","dialogsPage","dispatch","AddMessageActionCreator","withAuthRedirect","Dialogs"],"sourceRoot":""}