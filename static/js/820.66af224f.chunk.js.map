{"version":3,"file":"static/js/820.66af224f.chunk.js","mappings":"iMACA,G,QAA4B,4BAA5B,EAAoE,4BAApE,EAAyG,wBAAzG,EAAiJ,+BAAjJ,EAA0L,yBAA1L,EAA2U,yBAA3U,EAA+W,0BAA/W,EAAkZ,wB,uCCMrYA,EAAY,SAACC,GACtB,OAAOC,EAAAA,EAAAA,KAACC,EAAAA,EAAW,CAACC,MAAM,YAAWC,UACjCC,EAAAA,EAAAA,MAACC,EAAAA,GAAO,CAACC,GAAIC,EAAAA,EAAKC,QAAUT,EAAMU,GAAIC,UAAW,SAAAC,GAAU,OAAAA,EAARC,SAAyBC,EAAWA,CAAY,EAACV,SAAA,EAChGH,EAAAA,EAAAA,KAAA,OAAKc,IAAKf,EAAMe,MACff,EAAMgB,SAGnB,E,uCCcA,GAAeC,EAAAA,EAAAA,GAAgC,CAACC,KAAM,UAAtD,EAjBoB,SAAClB,GACjB,IAAOmB,EAAgBnB,EAAhBmB,aACP,OACId,EAAAA,EAAAA,MAAA,QAAMe,SAAUD,EAAcR,UAAWG,EAAUV,SAAA,EAC/CH,EAAAA,EAAAA,KAACoB,EAAAA,EAAK,CACFL,KAAM,UACNM,UAAWC,EAAAA,EACXC,YAAa,qBACbC,SAAU,CAACC,EAAAA,IACXf,UAAWG,KAEfb,EAAAA,EAAAA,KAACC,EAAAA,EAAW,CAAES,UAAWG,EAASV,SAAC,kBAI/C,I,oBCzBA,EAA0B,yBAA1B,EAAkE,8BAAlE,EAAuG,sBAAvG,EAAoI,sBAApI,EAAwK,6B,qDC8BxK,EA1BgB,SAACJ,GACb,OACIC,EAAAA,EAAAA,KAAA,OAAKS,GAAI,eAAiBV,EAAMU,GAAIC,UAAWG,EAAUV,UACrDC,EAAAA,EAAAA,MAAA,OAAKM,UAAWG,EAAeV,SAAA,EAC3BH,EAAAA,EAAAA,KAAA,OACIS,GAAI,cAAgBV,EAAMU,GAC1BK,IAAKY,KAETtB,EAAAA,EAAAA,MAAA,OAAKM,UAAWG,EAAOV,SAAA,EACnBH,EAAAA,EAAAA,KAAA,OAAKS,GAAI,YAAcV,EAAMU,GAAIC,UAAWG,EAAOV,SAAC,gBAGpDH,EAAAA,EAAAA,KAAA,OAAKS,GAAI,YAAcV,EAAMU,GAAIC,UAAWG,EAAcV,SACrDJ,EAAM4B,yBAW/B,EC5BA,EAAgC,qCAAhC,EAA0F,0CAA1F,EAAiJ,kCAAjJ,EAAgM,kCAAhM,EAAsP,yCC2CtP,EAtCsB,SAAC5B,GACnB,OACIC,EAAAA,EAAAA,KAAA,OACIS,GAAI,sBAAwBV,EAAMU,GAClCC,UAAWG,EAAgBV,UAE3BC,EAAAA,EAAAA,MAAA,OAAKM,UAAWG,EAAqBV,SAAA,EACjCH,EAAAA,EAAAA,KAAA,OACIS,GAAI,qBAAuBV,EAAMU,GACjCK,IAAKc,KAETxB,EAAAA,EAAAA,MAAA,OAAKM,UAAWG,EAAaV,SAAA,EACzBH,EAAAA,EAAAA,KAAA,OACIS,GAAI,mBAAqBV,EAAMU,GAC/BC,UAAWG,EAAaV,SAC3B,aAGDH,EAAAA,EAAAA,KAAA,OACIS,GAAI,mBAAqBV,EAAMU,GAC/BC,UAAWG,EAAoBV,SAE9BJ,EAAM8B,uBAc/B,ECLA,EA3BgB,SAAC9B,GAEb,IAAI+B,EAAiB/B,EAAMgC,QAAQC,KAAI,SAAAC,GAAC,OAAKjC,EAAAA,EAAAA,KAACF,EAAS,CAACW,GAAIwB,EAAExB,GAAIM,KAAMkB,EAAElB,KAAMD,IAAKmB,EAAEnB,KAAM,IACzFoB,EAAmBnC,EAAMoC,SAASC,EAAAA,IAAWJ,KAAI,SAAAK,GAAC,OAAIA,EAAEV,iBACxD3B,EAAAA,EAAAA,KAACsC,EAAO,CAAC7B,GAAI4B,EAAE5B,GAAIkB,gBAAiBU,EAAEV,mBACtC3B,EAAAA,EAAAA,KAACuC,EAAa,CAAC9B,GAAI4B,EAAE5B,GAAIoB,cAAeQ,EAAER,eAAgB,IAK9D,OAAOzB,EAAAA,EAAAA,MAACoC,EAAAA,EAAG,CACPC,GAAI,CACAC,QAAS,OACTC,SAAU,IACVC,OAAQ,QACVzC,SAAA,EAEFH,EAAAA,EAAAA,KAAC6C,EAAAA,EAAK,CAACC,UAAW,EAAGpC,UAAWG,EAAYV,SACvC2B,KAEL1B,EAAAA,EAAAA,MAACyC,EAAAA,EAAK,CAACC,UAAW,EAAGpC,UAAWG,EAAgBV,SAAA,EAC5CH,EAAAA,EAAAA,KAAA,OAAKU,UAAWG,EAAUV,SAAE+B,KAC5BlC,EAAAA,EAAAA,KAAC+C,EAAe,CAAC5B,SAfV,SAAC6B,GACZjD,EAAMkD,uBAAuBb,EAAAA,GAAWY,EAAKE,QACjD,SAgBJ,ECZA,GAAeC,EAAAA,EAAAA,KACXC,EAAAA,EAAAA,KAhBkB,SAACC,GACnB,MAAO,CACHtB,QAASsB,EAAMC,YAAYvB,QAC3BI,SAAUkB,EAAMC,YAAYnB,SAGpC,GAU6B,CAACc,uBAAAA,EAAAA,KAC1BM,EAAAA,EAFJ,CAGEC,E","sources":["webpack://project1/./src/s2-features/f3-messages/Dialogs.module.css?3a54","s2-features/f3-messages/FriendBox/FriendBox.tsx","s2-features/f3-messages/MessageForm/MessageForm.tsx","webpack://project1/./src/s2-features/f3-messages/message/Message.module.css?cf96","s2-features/f3-messages/message/Message.tsx","webpack://project1/./src/s2-features/f3-messages/friend-message/FriendMessage.module.css?41fd","s2-features/f3-messages/friend-message/FriendMessage.tsx","s2-features/f3-messages/Dialogs.tsx","s2-features/f3-messages/DialogsContainer.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"friendBox\":\"Dialogs_friendBox__Clf65\",\"friendName\":\"Dialogs_friendName__68fFG\",\"active\":\"Dialogs_active__+FD2o\",\"chatContainer\":\"Dialogs_chatContainer__B22aT\",\"chatBox\":\"Dialogs_chatBox__f4Fwo\",\"messagesFromFriend\":\"Dialogs_messagesFromFriend__dDlcT\",\"messagesPersonal\":\"Dialogs_messagesPersonal__gwtVc\",\"textBox\":\"Dialogs_textBox__ys5cI\",\"textArea\":\"Dialogs_textArea__AFF7X\",\"button\":\"Dialogs_button__dUenE\"};","import React from \"react\";\nimport s from \"s2-features/f3-messages/Dialogs.module.css\";\nimport {NavLink} from \"react-router-dom\";\nimport {DialogFriendStateType} from \"s1-main/m2-bll/message-reducer\";\nimport {SuperButton} from \"s1-main/m1-ui/common/SuperButton/SuperButton\";\nimport {PATH} from \"s1-main/m1-ui/routes/AppRoutes\";\n\nexport const FriendBox = (props: DialogFriendStateType) => {\n    return <SuperButton xType='secondary' >\n        <NavLink to={PATH.DIALOGS + props.id} className={({isActive}) => isActive ? s.active : s.friendName}>\n            <img src={props.src}/>\n            {props.name}\n        </NavLink>\n    </SuperButton>\n}","import React from 'react';\nimport {Field, InjectedFormProps, reduxForm} from \"redux-form\";\nimport {textareaField} from \"s1-main/m1-ui/common/fields/Fields\";\nimport {maxLength200} from \"s1-main/m1-ui/utils/validators\";\nimport s from '../Dialogs.module.css'\nimport {SuperButton} from \"s1-main/m1-ui/common/SuperButton/SuperButton\";\n\nexport type MessageFormPropsType = {\n    message: string\n}\n\nconst MessageForm = (props: InjectedFormProps<MessageFormPropsType>) => {\n    const {handleSubmit} = props\n    return (\n        <form onSubmit={handleSubmit} className={s.textBox}>\n            <Field\n                name={'message'}\n                component={textareaField}\n                placeholder={'Enter your message'}\n                validate={[maxLength200]}\n                className={s.textArea}\n            />\n            <SuperButton  className={s.button}>Add Message</SuperButton>\n        </form>\n\n    );\n};\n\nexport default reduxForm<MessageFormPropsType>({form: 'dialog'})(MessageForm);","// extracted by mini-css-extract-plugin\nexport default {\"message\":\"Message_message__53qX5\",\"imageAndText\":\"Message_imageAndText__st2cU\",\"text\":\"Message_text__+xj7g\",\"name\":\"Message_name__k3+cj\",\"messageText\":\"Message_messageText__sm+qb\",\"time\":\"Message_time__xqMzS\"};","import React from 'react'\nimport s from 's2-features/f3-messages/message/Message.module.css'\nimport {SingleMessagePropsType} from \"s1-main/m2-bll/message-reducer\";\nimport ava from '../../../s1-main/m1-ui/images/avatar.png'\n\nconst Message = (props: SingleMessagePropsType) => {\n    return (\n        <div id={'hw1-message-' + props.id} className={s.message}>\n            <div className={s.imageAndText}>\n                <img\n                    id={'hw1-avatar-' + props.id}\n                    src={ava}\n                />\n                <div className={s.text}>\n                    <div id={'hw1-name-' + props.id} className={s.name}>\n                        IKnopochka\n                    </div>\n                    <pre id={'hw1-text-' + props.id} className={s.messageText}>\n                        {props.personalMessage}\n                    </pre>\n                </div>\n            </div>\n            {/*<div id={'hw1-time-' + props.id} className={s.time}>*/}\n            {/*    /!*создаёт студент*!/*/}\n            {/*    {props.message.message.time}*/}\n            {/*    /!**!/*/}\n            {/*</div>*/}\n        </div>\n    )\n}\n\nexport default Message\n","// extracted by mini-css-extract-plugin\nexport default {\"friendMessage\":\"FriendMessage_friendMessage__7yh0A\",\"friendImageAndText\":\"FriendMessage_friendImageAndText__Ep6Sp\",\"friendText\":\"FriendMessage_friendText__vHXdU\",\"friendName\":\"FriendMessage_friendName__lt3fU\",\"friendMessageText\":\"FriendMessage_friendMessageText__LkIA0\",\"friendTime\":\"FriendMessage_friendTime__Yg7v1\"};","import React from 'react'\nimport s from 's2-features/f3-messages/friend-message/FriendMessage.module.css'\nimport {SingleMessagePropsType} from \"s1-main/m2-bll/message-reducer\";\nimport friendAva from '../../../s1-main/m1-ui/images/avatar.png'\n\n\nconst FriendMessage = (props: SingleMessagePropsType) => {\n    return (\n        <div\n            id={'hw1-friend-message-' + props.id}\n            className={s.friendMessage}\n        >\n            <div className={s.friendImageAndText}>\n                <img\n                    id={'hw1-friend-avatar-' + props.id}\n                    src={friendAva}\n                />\n                <div className={s.friendText}>\n                    <div\n                        id={'hw1-friend-name-' + props.id}\n                        className={s.friendName}\n                    >\n                        Michael\n                    </div>\n                    <pre\n                        id={'hw1-friend-text-' + props.id}\n                        className={s.friendMessageText}\n                    >\n                        {props.friendMessage}\n                    </pre>\n                </div>\n            </div>\n            {/*<div*/}\n            {/*    id={'hw1-friend-time-' + props..id}*/}\n            {/*    className={s.friendTime}*/}\n            {/*>*/}\n            {/*    /!*создаёт студент*!/*/}\n            {/*    {props.message.message.time}*/}\n            {/*    /!**!/*/}\n            {/*</div>*/}\n        </div>\n    )\n}\n\nexport default FriendMessage\n","import React from \"react\";\nimport s from \"s2-features/f3-messages/Dialogs.module.css\";\nimport {FriendBox} from \"s2-features/f3-messages/FriendBox/FriendBox\";\nimport MessageTextForm, {MessageFormPropsType} from \"s2-features/f3-messages/MessageForm/MessageForm\";\nimport Box from \"@mui/material/Box\";\nimport Paper from \"@mui/material/Paper\";\nimport { ChatInitialStateType, MichailID} from \"s1-main/m2-bll/message-reducer\";\nimport Message from \"s2-features/f3-messages/message/Message\";\nimport FriendMessage from \"s2-features/f3-messages/friend-message/FriendMessage\";\n\nconst Dialogs = (props: DialogsPagePropsType) => {\n\n    let friendElements = props.friends.map(d => (<FriendBox id={d.id} name={d.name} src={d.src}/>))\n    let messagesElements = props.messages[MichailID].map(m => m.personalMessage ?\n        <Message id={m.id} personalMessage={m.personalMessage}/> :\n        <FriendMessage id={m.id} friendMessage={m.friendMessage}/> )\n\n    const Submit = (data: MessageFormPropsType) => {\n        props.AddMessageThunkCreator(MichailID, data.message)\n    }\n    return <Box\n        sx={{\n            display: 'flex',\n            flexGrow: '1',\n            margin: '10px',\n        }}\n    >\n        <Paper elevation={5} className={s.friendBox}>\n            {friendElements}\n        </Paper>\n        <Paper elevation={5} className={s.chatContainer}>\n            <div className={s.chatBox}>{messagesElements}</div>\n            <MessageTextForm onSubmit={Submit}/>\n        </Paper>\n    </Box>\n}\n\nexport default Dialogs\n\n//types\nexport type DialogsMapToDispatchPropsType = {\n    AddMessageThunkCreator: (userId: string, message: string) => void\n}\nexport type DialogsPagePropsType = DialogsMapToDispatchPropsType & ChatInitialStateType","import React, {ComponentType} from \"react\";\nimport {compose} from \"redux\";\nimport {withAuthRedirect} from \"s1-main/m1-ui/HOCs/withAuthRedirect\";\nimport {connect} from \"react-redux\";\nimport { AddMessageThunkCreator, ChatInitialStateType} from \"s1-main/m2-bll/message-reducer\";\nimport Dialogs from \"s2-features/f3-messages/Dialogs\";\nimport { AppRootStateType} from \"s1-main/m3-dal/store\";\n\nlet mapStateToProps = (state: AppRootStateType): ChatInitialStateType => {\n    return {\n        friends: state.dialogsPage.friends,\n        messages: state.dialogsPage.messages,\n\n    }\n}\n// let mapDispatchToProps = (dispatch: AppDispatch): DialogsMapToDispatchPropsType => {\n//     return {\n//         onAddMessage: (userId: string, message: string) => {\n//             dispatch(AddMessageThunkCreator(userId, message))\n//         }\n//     }\n// }\n\nexport default compose<ComponentType>(\n    connect(mapStateToProps, {AddMessageThunkCreator}),\n    withAuthRedirect,\n)(Dialogs)"],"names":["FriendBox","props","_jsx","SuperButton","xType","children","_jsxs","NavLink","to","PATH","DIALOGS","id","className","_ref","isActive","s","src","name","reduxForm","form","handleSubmit","onSubmit","Field","component","textareaField","placeholder","validate","maxLength200","ava","personalMessage","friendAva","friendMessage","friendElements","friends","map","d","messagesElements","messages","MichailID","m","Message","FriendMessage","Box","sx","display","flexGrow","margin","Paper","elevation","MessageTextForm","data","AddMessageThunkCreator","message","compose","connect","state","dialogsPage","withAuthRedirect","Dialogs"],"sourceRoot":""}